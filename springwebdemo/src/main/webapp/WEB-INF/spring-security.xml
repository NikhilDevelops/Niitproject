<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- <security:http auto-config="true" use-expressions="true"> <security:intercept-url 
		pattern="/index" access="anonymous" /> <security:form-login login-page="/login" 
		default-target-url="/products" username-parameter="vendor_email" password-parameter="vendor_password" 
		authentication-failure-url="/login" /> <security:logout logout-success-url="/" 
		/> <security:csrf disabled="true"/> <security:access-denied-handler error-page="/403" 
		/> </security:http> <bean id="noOpPasswordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"> 
		</bean> <security:authentication-manager> <security:authentication-provider> 
		<security:password-encoder ref="noOpPasswordEncoder"></security:password-encoder> 
		<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select 
		vendor_email,vendor_password,vendor_active from Vendor where vendor_email=?" 
		authorities-by-username-query="select vendor_email,role from Vendor where 
		vendor_email=? " /> </security:authentication-provider> <security:authentication-provider> 
		<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select 
		email,password,active from Admin where email=?" authorities-by-username-query="select 
		email,role from admin where email =? " /> </security:authentication-provider> 
		<security:authentication-provider> <security:jdbc-user-service data-source-ref="dataSource" 
		users-by-username-query="select customer_email,customer_password,active from 
		customer where customer_email=?" authorities-by-username-query="select customer_email,role 
		from customer where customer_email=? " /> </security:authentication-provider> 
		</security:authentication-manager> -->


	<bean id="noOpPasswordEncoder"
		class="org.springframework.security.crypto.password.NoOpPasswordEncoder">

	</bean>


	<!-- vendor security code -->

	<security:http auto-config="true" use-expressions="true"
		pattern="/vendor/**" authentication-manager-ref="vendorAuthManager" >
		<security:intercept-url
			pattern="/vendor/**" access="hasAuthority('vendor')"/>
<security:intercept-url pattern="/vendor/vendorlogin" access="anonymous"/>
		<security:form-login login-page="/vendorlogin"
			login-processing-url="/vendor/login"
			default-target-url="/vendor/products"
			username-parameter="vendor_email"
			password-parameter="vendor_password"
			authentication-failure-url="/vendorlogin" />

<security:logout  logout-url="/vendor/logout" logout-success-url="/index"/>
		<security:csrf disabled="true" />
		<security:access-denied-handler
			error-page="/403" />
	</security:http>

	<security:authentication-manager
		id="vendorAuthManager">
		<security:authentication-provider>
			<security:password-encoder
				ref="noOpPasswordEncoder"></security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select vendor_email,vendor_password,vendor_active from Vendor where vendor_email=?"
				authorities-by-username-query="select vendor_email,role from Vendor where vendor_email=?" />
		</security:authentication-provider>
	</security:authentication-manager>



	<!-- admin security code -->

	<security:http auto-config="true" use-expressions="true"
		pattern="/admin/**" authentication-manager-ref="adminAuthManager">
		<security:intercept-url
			pattern="/admin/**" access="hasAuthority('admin')" />
<security:intercept-url pattern="/admin/adminlogin" access="anonymous"/>
		<security:form-login login-page="/adminlogin"
			login-processing-url="/admin/adminlogin"
			default-target-url="/admin/adminpage" username-parameter="email"
			password-parameter="password"
			authentication-failure-url="/adminlogin" />
			<security:logout  logout-url="/admin/logout" logout-success-url="/index"/>
		<security:csrf disabled="true" />
		<security:access-denied-handler
			error-page="/403" />
	</security:http>

	<security:authentication-manager
		id="adminAuthManager">
		<security:authentication-provider>
			<security:password-encoder
				ref="noOpPasswordEncoder"></security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select email,password,active from admin where email=?"
				authorities-by-username-query="select email,role from admin where email=?" />
		</security:authentication-provider>
	</security:authentication-manager>

<!-- customer security code -->
	<security:http auto-config="true" use-expressions="true"
		pattern="/customer/**" authentication-manager-ref="custAuthManager">
		<security:intercept-url
			pattern="/customer/**" access="hasAuthority('customer')" />
	   <security:intercept-url pattern="/customer/customerlogin" access="anonymous"/>
		<security:form-login login-page="/customerlogin"
			login-processing-url="/customer/customerlogin"
			default-target-url="/index"
			username-parameter="customer_email"
			password-parameter="customer_password"
			authentication-failure-url="/customerlogin"/>
			<security:logout  logout-url="/customer/logout" logout-success-url="/index"/>
		<security:csrf disabled="true" />
		
		<security:access-denied-handler
			error-page="/403" />
	</security:http>

	<security:authentication-manager
		id="custAuthManager">
		<security:authentication-provider>
			<security:password-encoder
				ref="noOpPasswordEncoder"></security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select customer_email,customer_password,active from customer where customer_email=?"
				authorities-by-username-query="select customer_email,role from customer where customer_email=?" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>